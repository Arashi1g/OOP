import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.*;

// ParentButton class that implements ActionListener
public class ParentButton extends JButton implements ActionListener {

    // Constructor for ParentButton
    public ParentButton(String text) {
        super(text);
        setPreferredSize(new Dimension(250, 150));  // Making the buttons larger
        addActionListener(this);
    }

    // Protected method to be overridden by ChildButton
    protected void addLabel(JFrame buttonFrame) {
        // Default implementation in ParentButton will be to do nothing
    }

    // The actionPerformed method that creates a JFrame when the button is clicked.
    @Override
    public void actionPerformed(ActionEvent e) {
        JFrame buttonFrame = new JFrame("A Window");
        buttonFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        addLabel(buttonFrame);
        buttonFrame.setSize(300, 200);
        buttonFrame.setLocationRelativeTo(null);
        buttonFrame.setVisible(true);
    }

    // Main method creates the UI
    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            // Create a JFrame to hold buttons
            JFrame mainFrame = new JFrame("Button Inheritance Example");
            mainFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            mainFrame.setSize(400, 200);
            mainFrame.setLayout(new FlowLayout());

            // Create two instances of the child class
            ChildButton childButton1 = new ChildButton("Child Button 1");
            ChildButton childButton2 = new ChildButton("Child Button 2");

            // Add the buttons to the main frame
            mainFrame.add(childButton1);
            mainFrame.add(childButton2);

            // Center the frame in the middle of your screen
            mainFrame.setLocationRelativeTo(null);
            mainFrame.setVisible(true);
        });
    }
}

// ChildButton class that extends ParentButton
class ChildButton extends ParentButton {
    private final String message = "orn16 window generated by ";  // your NetID

    // Constructor for ChildButton
    public ChildButton(String text) {
        super(text);
    }

    // Overriding the addLabel method to display a custom message in the new window
    @Override
    protected void addLabel(JFrame buttonFrame) {
        String buttonText = getText();
        String displayMessage = message + buttonText;
        JOptionPane.showMessageDialog(buttonFrame, displayMessage, buttonText + " Window", JOptionPane.INFORMATION_MESSAGE);
    }
}
